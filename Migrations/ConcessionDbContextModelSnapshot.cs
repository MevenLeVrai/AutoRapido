// <auto-generated />
using System;
using AutoRapido.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AutoRapido.Migrations
{
    [DbContext(typeof(ConcessionDbContext))]
    partial class ConcessionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AutoRapido.Model.Client", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ConcessionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ClientId");

                    b.HasIndex("ConcessionId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutoRapido.Model.Concession", b =>
                {
                    b.Property<Guid>("ConcessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ConcessionId");

                    b.ToTable("Concession");
                });

            modelBuilder.Entity("AutoRapido.Model.Purchase", b =>
                {
                    b.Property<Guid>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CarId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("PurchaseId");

                    b.HasIndex("CarId");

                    b.HasIndex("ClientId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("Car", b =>
                {
                    b.Property<Guid>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ConcessionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FirstRegistrationYear")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsSold")
                        .HasColumnType("boolean");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("CarId");

                    b.HasIndex("ConcessionId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarClient", b =>
                {
                    b.Property<Guid>("CarListCarId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OwnerListClientId")
                        .HasColumnType("uuid");

                    b.HasKey("CarListCarId", "OwnerListClientId");

                    b.HasIndex("OwnerListClientId");

                    b.ToTable("CarClient");
                });

            modelBuilder.Entity("AutoRapido.Model.Client", b =>
                {
                    b.HasOne("AutoRapido.Model.Concession", null)
                        .WithMany("ListClients")
                        .HasForeignKey("ConcessionId");
                });

            modelBuilder.Entity("AutoRapido.Model.Purchase", b =>
                {
                    b.HasOne("Car", null)
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoRapido.Model.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Car", b =>
                {
                    b.HasOne("AutoRapido.Model.Concession", null)
                        .WithMany("ListCars")
                        .HasForeignKey("ConcessionId");
                });

            modelBuilder.Entity("CarClient", b =>
                {
                    b.HasOne("Car", null)
                        .WithMany()
                        .HasForeignKey("CarListCarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoRapido.Model.Client", null)
                        .WithMany()
                        .HasForeignKey("OwnerListClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutoRapido.Model.Concession", b =>
                {
                    b.Navigation("ListCars");

                    b.Navigation("ListClients");
                });
#pragma warning restore 612, 618
        }
    }
}
